#!/bin/bash
# mlx_scratch.bsh
# license: public domain
# scratch script for using mlx functions

#set -x
scriptpath="$(cd "$(dirname "$0")"; pwd -P)"
verbosity=2
delete_TEMP3DL_files="false"

#cd "${scriptpath}/../test_models"

# switches:
# if [ 1 ]; then # ON, any number or string is true
# if [ ]; then # OFF, NULL is false

if [ -z "$1" ]; then 
    set "${scriptpath}/../test_models/PLANE.obj" # Sets 1st positional parameter, use absolute path 
fi

. ${scriptpath}/apps.bsh
#. ${scriptpath}/polylinesort.bsh

#cd "${scriptpath}/../test_models/"

#do_metadata "$fbase"
#do_subfiles "$fbase"
#measure_AABB "$fbase"

# Generate plane for PLANES.mlp; modify if you need a different plane size
if [  ]; then
    ml_IF=""
    ml_OF="PLANE.obj"
    
    mlx_begin
    mlx_square size=100 center=true
    mlx_end
    run_meshlab -vc
fi

# Create Captain America's shield in MeshLab 2D vertex colored surfaces!
if [  ]; then
    fn=50 # set number or segments to use for circles
    ml_IF=""
    ml_OF="shield.ply"
    mlx_begin
    
    # Star calculations (consider a central pentagon with 5 triangles attached to the edges)
    r=2 # radius of circumscribing circle
    p=$(bc -l ${scriptpath}/funcs.bc <<< "scale=10;($r/(1 + tan(36*pi()/180)/tan(18*pi()/180)))") # distance from center to pentagon edge midpoint
    w=$(bc -l ${scriptpath}/funcs.bc <<< "scale=10;($p*tan(36*pi()/180))") # 1/2 width of pentagon edge/outer triangle bottom
    h=$(bc -l ${scriptpath}/funcs.bc <<< "scale=10;($w/tan(18*pi()/180))") # height of outer triangle
    
    # Create star by scaling 5 squares into diamonds & rotating them around
    for ((i=1; i <= 5 ; i++)); do
        mlx_square s=$(bc <<< "scale=10;(sqrt(2))") center=true color=white # create square with length from center to vertices is 1, so side length of sqrt(2) - thanks Pythagoras!
        mlx_rotate z=45
        mlx_scale x=$w y=$h
        mlx_translate y=$p
        mlx_rotate z=$(bc <<< "scale=10;($i*72)")
    done
    mlx_flatten_layers # flatten star
    mlx_translate z=.001 # translate start up slightly so it doesn't overlap center circle
    
    mlx_circle r=2 color=blue
    mlx_circle r1=3 r2=2 color=red
    mlx_circle r1=4 r2=3 color=white
    mlx_circle r1=5 r2=4 color=red
    mlx_flatten_layers
    mlx_end
    
    run_meshlab
    #meshlabserver -i "$ml_IF" -o "$ml_OF" -m vn vc  -s "$ml_SF"
    return_code=$?
    if [ $return_code -ne 0 ]; then
        pause "Uh oh, looks like there's an error. Hit any key to keep going anyway ... "
    fi
fi

# test out various functions before adding them to generate_apps.bsh
if [ 1 ]; then
    #measure_dimension   y=2 $1 z=5
    #${scriptpath}/c/polylinesort.bsh test_outline_closed.obj
    #${scriptpath}/c/polylinesort.exe polylinesort.test
    #${scriptpath}/c/polylinesort.exe test_4_outlines_closed.obj
    #${scriptpath}/c/polylinesort.exe polylinesort_square_test.obj

    #polylinesort polylinesort_square_test.obj
    #polylinesort polylinesort.test
    #set -x
    #half_bust_FFF "$fbase"
    #measure_geometry "$fbase"
    ${scriptpath}/c/AABB.exe "$fbase"
    
    measure_AABB "$fbase" >> AABB.txt
fi

pause
