#!/bin/bash
# generate_apps.bsh
# license: LGPLv2.1
# generate app scripts & shortcuts

scriptpath="$(cd "$(dirname "$0")"; pwd -P)"
cd "$scriptpath"
. ./mlx.bsh

# compile c programs

if [ ! -x "../c/polylinesort" ] || [ ! -x "../c/polylinesort.exe" ]; then
    gcc -Wall ../c/polylinesort.c -o ../c/polylinesort
fi

if [ ! -x "../c/AABB" ] || [ ! -x "../c/AABB.exe" ]; then
    gcc -Wall ../c/AABB.c -o ../c/AABB
fi

gen_mlx_scratch_shortcuts="true"

apps="
2daez
2objz
2objNC
2stl
check_mesh
pricing
simplify
scale
swapYZ
rename
"
#center_x

modeling_apps="
hollow
half_bust_FFF
platform_FFF
scad_template
"

# apps we want to pause at the end of
pause_apps="
2daez
2objz
2stl
check_mesh
pricing
simplify
rename
"

pause_mod_apps="
hollow
half_bust_FFF
platform_FFF
scad_template
"

gen_bash() { #generate bash scripts for each app
    echo "#!/bin/bash
# Automatically generated script to launch a function

main_start_time=\$(date +%s.%N)

scriptpath=\"\$(cd \"\$(dirname \"\$0\")\"; pwd -P)\"
verbosity=2
delete_TEMP3DL_files=\"true\"
app_name=\"$1\"

. \${scriptpath}/apps.bsh
echo
echo \"Starting ${1} on file \\\"\${fbase}\\\" ... \"
do_${2} \"\$fbase\"

if [ \"\$delete_TEMP3DL_files\" = \"true\" ]; then
    rm -f TEMP3DL*
fi

main_end_time=\$(date +%s.%N)
main_diff_time=\$(bc <<< \"\$main_end_time - \$main_start_time\")
main_diff_time=\$(printf %.0f \$main_diff_time) #round to integer seconds

echo 
echo -n \"Finished ${1} on input file \\\"\${fbase}\\\" in \"; printf \"%0dh:%0dm:%0ds\n\" \$((\$main_diff_time/3600)) \$((\$main_diff_time%3600/60)) \$((\$main_diff_time%60))

echo \"Final output file: \\\"\${return_file}\\\"\"
" > "${1}.bsh"
    chmod +x "${1}.bsh"
}

gen_cmd_old() { #generate cmd files for drag & drop on Windows
    echo "@echo off
setlocal
set CMD_LAUNCH=true

REM Check for bash .bsh script file:
REM if not exist \"%~dpn0.bsh\" echo Script \"%~dpn0.bsh\" not found & exit 2

REM Check for cygwin
set _CYGBIN=${_CYGBIN}
if not exist \"%_CYGBIN%\" echo Couldn't find Cygwin at \"%_CYGBIN%\" & exit 3

REM Resolve ___.bsh to /cygdrive based *nix path and store in %_CYGSCRIPT%
for /f \"delims=\" %%A in ('%_CYGBIN%\cygpath.exe \"%~dp0\\${1}.bsh\"') do set _CYGSCRIPT=%%A

REM Execute bash script & pass arguments
%_CYGBIN%\\bash --login \"%_CYGSCRIPT%\" %*
endlocal
" > "${1}.cmd"
    chmod +x "${1}.cmd"   
}

# generate cmd files for drag & drop on Windows
# 1=directory to create shortcuts, 2=app name
gen_cmd() {
    echo "@echo off
setlocal
set CMD_LAUNCH=true

REM Check for bash .bsh script file:
REM if not exist \"%~dpn0.bsh\" echo Script \"%~dpn0.bsh\" not found & exit 2

REM Check for cygwin
set _CYGBIN=${_CYGBIN}
if not exist \"%_CYGBIN%\" echo Couldn't find Cygwin at \"%_CYGBIN%\" & exit 3

REM Resolve ___.bsh to /cygdrive based *nix path and store in %_CYGSCRIPT%
REM for /f \"delims=\" %%A in ('%_CYGBIN%\cygpath.exe \"%~dp0\\bash\\${2}.bsh\"') do set _CYGSCRIPT=%%A

REM %_CYGBIN%\\bash --login \"%_CYGSCRIPT%\" %*
%_CYGBIN%\\bash --login \"$scriptpath/${2}.bsh\" %*
endlocal
" > "${1}${2}.cmd"
    chmod +x "${1}${2}.cmd"
}

# generate desktop files for drag & drop on Linux
# 1=directory to create shortcuts, 2=app name
gen_desktop() {
        echo "[Desktop Entry]
Exec=\"${scriptpath}/${1}.bsh\"
Name[en_EN]=${1}
Terminal=true
Type=Application
" > "${1}${2}.desktop"
        chmod +x "${1}${2}.desktop"    
}

if [[ $(uname -s) == CYGWIN* ]]; then
    if [ "$CMD_LAUNCH" != "true" ]; then
        gen_cmd "./" "generate_apps"
    fi
    gen_cmd "./" "remove_apps"
fi
    
for a in $apps ; do
    app_name="3DL-$a"
    gen_bash "$app_name" "$a"
    if [[ $(uname -s) == CYGWIN* ]]; then
        gen_cmd "../apps/" "$app_name"
    elif [[ $(uname -s) == Linux* ]]; then
        gen_desktop "../apps/" "$app_name"
    fi
done

for a in $modeling_apps ; do
    app_name="3DL_mod-$a"
    gen_bash "$app_name" "$a"
    if [[ $(uname -s) == CYGWIN* ]]; then
        gen_cmd "../apps/" "$app_name"
    elif [[ $(uname -s) == Linux* ]]; then
        gen_desktop "../apps/" "$app_name"
    fi
done


# add pause to the end of certain apps, i.e. so you can review the output before closing.
for a in $pause_apps ; do
    app_name="3DL-$a"
    echo "pause \"Hit any key to close window ... \"" >> "${app_name}.bsh"
done

for a in $pause_mod_apps ; do
    app_name="3DL_mod-$a"
    echo "pause \"Hit any key to close window ... \"" >> "${app_name}.bsh"
done

# change verbosity of certain apps, e.g. for troubleshooting
sed -i "s/verbosity=2/verbosity=6/" "3DL_mod-hollow.bsh"
sed -i "s/verbosity=2/verbosity=3/" "3DL_mod-half_bust_FFF.bsh"
sed -i "s/verbosity=2/verbosity=3/" "3DL_mod-platform_FFF.bsh"
sed -i "s/verbosity=2/verbosity=3/" "3DL-2stl.bsh"
sed -i "s/delete_TEMP3DL_files=\"true\"/delete_TEMP3DL_files=\"false\"/" "3DL_mod-hollow.bsh"

# Generate shortcuts for mlx_scratch.bsh
if [ "$gen_mlx_scratch_shortcuts" = "true" ]; then
    if [[ $(uname -s) == CYGWIN* ]]; then
        gen_cmd "../apps/" "mlx_scratch"
    elif [[ $(uname -s) == Linux* ]]; then
        gen_desktop "../apps/" "mlx_scratch"
     fi
fi

#for a in $scriptpath/* ; do
#    dos2unix "$a"
#done

#dos2unix *

#pause
